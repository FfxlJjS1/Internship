version: "3.5"

networks:
  net:
    driver: bridge

services:
  
  front.scheme:
    container_name: front.scheme
    build: ./display_sheme_reactapp
    ports:
      - '4000:3000'
    networks:
      - net
    depends_on:
      - backend.scheme
  front.tank:
    container_name: front.tank
    build: ./oil_tanks_reactapp
    ports:
      - '4001:3000'
    networks:
      - net
    depends_on:
      - backend.tank       
  
  backend.scheme:
    container_name: backend.scheme
    build: ./display_sheme_webapi
    ports:
      - '7147:80'
    networks:
      - net
    depends_on:
      - postgres.scheme
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_URL=jdbc:postgresql://postgres:12345@postgres:5432/db_collection
  backend.tank:
    container_name: backend.tank
    build: ./oil_tanks_webapi
    ports:
      - '7148:80'
    networks:
      - net
    depends_on:
      - postgres.tank
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_URL=jdbc:postgresql://postgres:12345@postgres:5432/db_cistern
  
  postgres.scheme:
    container_name: postgres.scheme
    image: postgres:11-alpine
    ports:
      - '5432:5432'
    networks:
      - net
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: db_collection
    volumes:
      - postgres-data-scheme:/var/lib/postgresql/data
      - ./init_scheme.sql:/docker-entrypoint-initdb.d/data.sql
  postgres.tank:
    container_name: postgres.tank
    image: postgres:11-alpine
    ports:
      - '5433:5432'
    networks:
      - net
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: db_cistern
    volumes:
      - postgres-data-tank:/var/lib/postgresql/data
      - ./init_cistern.sql:/docker-entrypoint-initdb.d/data.sql
  
  proxy:
    container_name: proxy
    image: nginx:mainline
    ports:
      - '80:80'
      - '90:90'
    networks:
      - net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - front.scheme
      - front.tank
  
volumes:
  postgres-data-scheme:
  postgres-data-tank: